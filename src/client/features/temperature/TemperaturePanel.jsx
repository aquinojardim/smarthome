import React, { useState } from 'react';
import { makeStyles } from '@material-ui/core/styles';
import { Drawer, List, Divider } from '@material-ui/core';
import { useSelector } from 'react-redux';
import Thermostat from './temperatureComponents/Thermostat';
import ChangeTemperature from './temperatureComponents/ChangeTemperature';
// define width of drawer
const drawerWidth = '40%';

// custom styles for the drawer
const useStyles = makeStyles((theme) => ({
  // drawer stays at fixed width, no matter the size of the screen
  drawer: {
    width: drawerWidth,
    flexShrink: 0,
  },
  title: {
    marginLeft: '18px',
    marginTop: '52px',
  },
  // width of background of drawer
  drawerPaper: {
    backgroundColor: '#F1F5F8',
    margin: '10%',
    width: drawerWidth,
    height: '80%',
  },
  drawerContainer: {
    overflow: 'auto',
  },
}));

export default function TemperaturePanel(props) {
  // gives us access to styles object generated by makeStyles
  const classes = useStyles();
  const { lights, temperature, targetTemperature } = useSelector((state) => state);
  // Set the initial state.
  const minTemperature = 50;
  const maxTemperature = 90;
  const[ dataArray, setData ] = useState([]);
  const [away, setAway] = useState(false);
  const [hvacMode, setHvacMode] = useState('off');
  const [leaf, setLeaf] = useState(false);

  const handleModeChange = (event) => {
    setAway({ away: JSON.parse(event.target.value) });
  }

  const handleHvacModeChange = (event) => {
    setHvacMode({ hvacMode: event.target.value });
  }

  const handleLeafChange = (event) => {
    setLeaf({ leaf: JSON.parse(event.target.value) });
  }

  return (
    <Drawer
    // targets the nested component of the drawer (in this case, the paper)
      classes={{
        paper: classes.drawerPaper,
      }}
      className={classes.drawer}
      variant="permanent"
      anchor="left"
    >
      <h3 className={classes.title}> Temperature Panel </h3>
        <Thermostat 
          height="100%" 
          width="100%" 
          away={away}
          numTicks={100}
          minValue={0}
          maxValue={90}
          hvacMode={hvacMode} 
          leaf={leaf}
        />
        <div className="row space-before">
          <ChangeTemperature/>
        </div>
      </Drawer>
  );
}