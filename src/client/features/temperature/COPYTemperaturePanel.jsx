import React, { useState } from 'react';
import { makeStyles } from '@material-ui/core/styles';
import { Drawer, List, Divider } from '@material-ui/core';
import { useSelector } from 'react-redux';
const Thermostat = require('./temperatureComponents/Thermostat.jsx');
// define width of drawer
const drawerWidth = '40%';

// custom styles for the drawer
const useStyles = makeStyles((theme) => ({
  // drawer stays at fixed width, no matter the size of the screen
  drawer: {
    width: drawerWidth,
    flexShrink: 0,
  },
  title: {
    marginLeft: '18px',
    marginTop: '52px',
  },
  // width of background of drawer
  drawerPaper: {
    backgroundColor: '#F1F5F8',
    margin: theme.spacing(14),
    width: drawerWidth,
  },
  drawerContainer: {
    overflow: 'auto',
  },
}));

export default function TemperaturePanel(props) {
  // gives us access to styles object generated by makeStyles
  const classes = useStyles();
  const { lights } = useSelector((state) => state);
  // Set the initial state.
  const minTemperature = 50;
  const maxTemperature = 90;
  const[ dataArray, setData ] = useState([]);
  const [away, setAway] = useState(false);
  const [ambientTemperature, setAmbientTemperature] = useState(74);
  const [targetTemperature, setTargetTemperature] = useState(68);
  const [hvacMode, setHvacMode] = useState('off');
  const [leaf, setLeaf] = useState(false);

  const handleModeChange = (event) => {
    setAway({ away: JSON.parse(event.target.value) });
  }

  const handleHvacModeChange = (event) => {
    setHvacMode({ hvacMode: event.target.value });
  }

  const handleAmbientTemperatureChange = (event) => {
    setAmbientTemperature({ ambientTemperature: parseFloat(event.target.value) });
  }

  const handleTargetTemperatureChange = (event) => {
    setTargetTemperature({ targetTemperature: parseFloat(event.target.value) });
  }

  const handleLeafChange = (event) => {
    setLeaf({ leaf: JSON.parse(event.target.value) });
  }

  return (
    <div>
      <h1 className="cover-heading space-after">Temperature Panel</h1>
        {/* <Thermostat height="400px" width="400px" 
          away={away}
          ambientTemperature={ambientTemperature}
          targetTemperature={targetTemperature}
          hvacMode={hvacMode} 
          leaf={leaf}
        /> */}
        <div className="row space-before">
          <div className="col-md-6">
            <div className="form-group">
              <label htmlFor="ambientTemperature">Ambient Temperature</label>
              <input id="ambientTemperature" type="range"
                defaultValue={ambientTemperature}
                min={minTemperature} max={maxTemperature}
                onChange={handleAmbientTemperatureChange}
              ></input>
            </div>
          </div>
          <div className="col-md-6">
            <div className="form-group">
              <label htmlFor="targetTemperature">Target Temperature</label>
              <input id="targetTemperature" type="range"
                defaultValue={targetTemperature}
                min={minTemperature} 
                max={maxTemperature}
                onChange={handleTargetTemperatureChange}
              ></input>
            </div>
          </div>
        </div>
        <div className="row space-before">
          <div className="col-md-4">
            <div className="form-group">
              <label htmlFor="hvacModePicker">State</label>
              <select id="hvacModePicker" className="selectpicker"
                onChange={handleHvacModeChange}
              >
                <option value="off">Off</option>
                <option value="heating">Heating</option>
                <option value="cooling">Cooling</option>
              </select>
            </div>
          </div>
          <div className="col-md-4">
            <div className="form-group">
              <label htmlFor="modePicker">Away</label>
              <select id="modePicker" className="selectpicker"
                onChange={handleModeChange}
              >
                <option value="false">No</option>
                <option value="true">Yes</option>
              </select>
            </div>
          </div>
          <div className="col-md-4">
            <div className="form-group">
              <label htmlFor="leafPicker">Leaf</label>
              <select id="leafPicker" className="selectpicker" onChange={handleLeafChange}>
                <option value="false">No</option>
                <option value="true">Yes</option>
              </select>
            </div>
          </div>
        </div>
      </div>
  );
}