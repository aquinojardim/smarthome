import React, { useState } from 'react';
import { makeStyles } from '@material-ui/core/styles';
import { Drawer, List, Divider } from '@material-ui/core';
const LightItem = require('./lightComponents/LightItem');
import { useSelector } from 'react-redux';
// define width of sidebar
const drawerWidth = 250;

// custom styles for the sidebar
const useStyles = makeStyles((theme) => ({
  // drawer stays at fixed width, no matter the size of the screen
  drawer: {
    width: drawerWidth,
    flexShrink: 0,
  },
  title: {
    marginLeft: '18px',
    marginTop: '52px',
  },
  // width of background of drawer
  drawerPaper: {
    backgroundColor: '#F1F5F8',
    marginTop: theme.spacing(7),
    width: drawerWidth,
  },
  drawerContainer: {
    overflow: 'auto',
  },
}));


function LightPanel(props) {
  // gives us access to styles object generated by makeStyles
  const classes = useStyles();
  const { lights } = useSelector((state) => state);
  
  const lightsArray = Object.keys(lights).map((id) => {
      return (
        <LightItem id={id} name={lights[id].name} status={lights[id].status}/>
      );
  })
  
  /* Drawer is our sidebar navigation component, stays permanently fixed to side, as docs recommend on desktop usage */
  return (
    <Drawer
    // targets the nested component of the drawer (in this case, the paper)
      classes={{
        paper: classes.drawerPaper,
      }}
      className={classes.drawer}
      variant="permanent"
    >
    <h3 className={classes.title}> Lights Panel </h3>
      <div className={classes.drawerContainer}>
        {/* map topics to new navbar items (rendered as a list) */}
        <List>
          {/* up and down implent logic comparing with Date.now()*/}
          {lightsArray}
          <Divider/>
          {/* form to arr a new light */}
        </List>
      </div>
    </Drawer>
  );
}
export default LightPanel;
