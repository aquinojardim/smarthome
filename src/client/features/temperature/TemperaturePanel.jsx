import React from 'react';
import * as actions from '../../reducer/actions/actions';
import { useSelector, useDispatch } from 'react-redux';
import { makeStyles } from '@material-ui/core/styles';
import { green } from '@material-ui/core/colors';
import { 
  Drawer, 
  FormControlLabel, 
  Switch 
} from '@material-ui/core';
import Thermostat from './temperatureComponents/Thermostat';
import ChangeTemperature from './temperatureComponents/ChangeTemperature';

// custom styles for the drawer
const useStyles = makeStyles((theme) => ({
  // drawer stays at fixed width, no matter the size of the screen
  drawer: {
    [theme.breakpoints.down('sm')]: {
      width: '80%',
    },
    [theme.breakpoints.up('md')]: {
      width: '90%',
    },
    flexShrink: 0,
  },
  title: {
    marginLeft: '18px',
    marginTop: '52px',
  },
  // width of background of drawer
  drawerPaper: {
    backgroundColor: '#333',
    [theme.breakpoints.down('sm')]: {
      width: '80%',
      height: '80%',
      margin: '10%'
    },
    [theme.breakpoints.up('md')]: {
      width: '90%',
      height: '80%',
      margin: '5%'
    },
  },
  drawerContainer: {
    overflow: 'auto',
  },
  form:{
    marginLeft: 'auto',
    marginRight: 'auto',
  }
}));

export default function TemperaturePanel(props) {
  // gives us access to styles object generated by makeStyles
  const classes = useStyles();
  const { eco } = useSelector((state)=>state)
  const dispatch = useDispatch()
  // Set the initial state.

  const handleChange = (event) => {
    dispatch(actions.updateTemperature({eco: event.target.checked}))
  }

  return (
    <Drawer
    // targets the nested component of the drawer (in this case, the paper)
      classes={{
        paper: classes.drawerPaper,
      }}
      className={classes.drawer}
      variant="permanent"
      anchor="left"
    >
      <h3 className={classes.title}> Temperature Panel </h3>
        <div>
          <Thermostat 
            height="300px" 
            width="100%" 
            numTicks={100}
            minValue={0}
            maxValue={100}
          />
          <ChangeTemperature/>
        </div>
        <div className={classes.form}>
        <h3
        style={{ color: green[500] }} 
        >Eco mode</h3>
          <FormControlLabel
            control={ <Switch 
            checked={eco} onChange={handleChange} aria-label="eco switch" />}
            label={eco ? 'on' : 'off'}
          />
        </div>
      </Drawer>
  );
}